'use client';
import { _ as _$1 } from '@swc/helpers/_/_extends';
import { _ } from '@swc/helpers/_/_object_without_properties_loose';
import { jsx, jsxs } from 'react/jsx-runtime';
import * as React from 'react';
import { Drawer as Drawer$1 } from 'vaul';
import { clsx } from 'clsx';
import { twMerge } from 'tailwind-merge';

function cn(...inputs) {
    return twMerge(clsx(inputs));
}

const Drawer = (_param)=>{
    var { shouldScaleBackground = true } = _param, props = _(_param, [
        "shouldScaleBackground"
    ]);
    return /*#__PURE__*/ jsx(Drawer$1.Root, _$1({
        shouldScaleBackground: shouldScaleBackground
    }, props));
};
Drawer.displayName = 'Drawer';
const DrawerTrigger = Drawer$1.Trigger;
const DrawerPortal = Drawer$1.Portal;
const DrawerClose = Drawer$1.Close;
const DrawerOverlay = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className } = _param, props = _(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsx(Drawer$1.Overlay, _$1({
        ref: ref,
        className: cn('fixed inset-0 z-50 bg-black/80', className)
    }, props));
});
DrawerOverlay.displayName = Drawer$1.Overlay.displayName;
const DrawerContent = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className, children } = _param, props = _(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxs(DrawerPortal, {
        children: [
            /*#__PURE__*/ jsx(DrawerOverlay, {}),
            /*#__PURE__*/ jsxs(Drawer$1.Content, _$1({
                ref: ref,
                className: cn('bg-background fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border', className)
            }, props, {
                children: [
                    /*#__PURE__*/ jsx("div", {
                        className: "bg-muted mx-auto mt-4 h-2 w-[100px] rounded-full"
                    }),
                    children
                ]
            }))
        ]
    });
});
DrawerContent.displayName = 'DrawerContent';
const DrawerHeader = (_param)=>{
    var { className } = _param, props = _(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsx("div", _$1({
        className: cn('grid gap-1.5 p-4 text-center sm:text-left', className)
    }, props));
};
DrawerHeader.displayName = 'DrawerHeader';
const DrawerTitle = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className } = _param, props = _(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsx(Drawer$1.Title, _$1({
        ref: ref,
        className: cn('text-lg font-semibold leading-none tracking-tight', className)
    }, props));
});
DrawerTitle.displayName = Drawer$1.Title.displayName;
const DrawerDescription = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className } = _param, props = _(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsx(Drawer$1.Description, _$1({
        ref: ref,
        className: cn('text-muted-foreground text-sm', className)
    }, props));
});
DrawerDescription.displayName = Drawer$1.Description.displayName;

export { Drawer as D, DrawerTrigger as a, DrawerContent as b, cn as c, DrawerHeader as d, DrawerTitle as e, DrawerDescription as f, DrawerClose as g };
