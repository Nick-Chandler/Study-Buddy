import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import { Download, Check, Copy, FileIcon, XCircleIcon, icons, Loader2, ChevronDown, ChevronRight, Paperclip } from 'lucide-react';
import * as React from 'react';
import { memo, useRef, useEffect, lazy, useMemo, useState } from 'react';
import { _ as _$1 } from '@swc/helpers/_/_extends';
import { _ } from '@swc/helpers/_/_object_without_properties_loose';
import { Slot } from '@radix-ui/react-slot';
import { cva } from 'class-variance-authority';
import { c as cn, D as Drawer, a as DrawerTrigger, b as DrawerContent, d as DrawerHeader, e as DrawerTitle, f as DrawerDescription, g as DrawerClose } from './drawer-12s-CiogNq7V.js';
import ReactMarkdown from 'react-markdown';
import rehypeKatex from 'rehype-katex';
import remarkGfm from 'remark-gfm';
import remarkMath from 'remark-math';
import hljs from 'highlight.js';
import { u as useCopyToClipboard } from './use-copy-to-clipboard-12s-B94o_fsN.js';
import { HoverCard, HoverCardTrigger, HoverCardContent } from '@radix-ui/react-hover-card';
import 'remark';
import 'remark-parse';
import 'unist-util-visit';
import { P as Progress } from './progress-12s-B6tOi6Ka.js';
import { C as Collapsible, a as CollapsibleTrigger, b as CollapsibleContent } from './collapsible-12s-COjQnCr4.js';
import { _ as _$2 } from '@swc/helpers/_/_async_to_generator';
import CodeMirror from '@uiw/react-codemirror';
import { javascript } from '@codemirror/lang-javascript';
import { python } from '@codemirror/lang-python';
import { html } from '@codemirror/lang-html';
import { css } from '@codemirror/lang-css';
import { githubLight } from '@uiw/codemirror-theme-github';
import { headingsPlugin, listsPlugin, linkPlugin, linkDialogPlugin, tablePlugin, markdownShortcutPlugin, thematicBreakPlugin, quotePlugin, toolbarPlugin, UndoRedo, BoldItalicUnderlineToggles, BlockTypeSelect, MDXEditor } from '@mdxeditor/editor';

const buttonVariants = cva('inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-hidden focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50', {
    variants: {
        variant: {
            default: 'bg-primary text-primary-foreground hover:bg-primary/90',
            destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',
            outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',
            secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',
            ghost: 'hover:bg-accent hover:text-accent-foreground',
            link: 'text-primary underline-offset-4 hover:underline'
        },
        size: {
            default: 'h-10 px-4 py-2',
            sm: 'h-9 rounded-md px-3',
            lg: 'h-11 rounded-md px-8',
            icon: 'h-10 w-10'
        }
    },
    defaultVariants: {
        variant: 'default',
        size: 'default'
    }
});
const Button = /*#__PURE__*/ React.forwardRef((_param, ref)=>{
    var { className, variant, size, asChild = false } = _param, props = _(_param, [
        "className",
        "variant",
        "size",
        "asChild"
    ]);
    const Comp = asChild ? Slot : 'button';
    return /*#__PURE__*/ jsx(Comp, _$1({
        className: cn(buttonVariants({
            variant,
            size,
            className
        })),
        ref: ref
    }, props));
});
Button.displayName = 'Button';

const programmingLanguages = {
    javascript: '.js',
    python: '.py',
    java: '.java',
    c: '.c',
    cpp: '.cpp',
    'c++': '.cpp',
    'c#': '.cs',
    ruby: '.rb',
    php: '.php',
    swift: '.swift',
    'objective-c': '.m',
    kotlin: '.kt',
    typescript: '.ts',
    go: '.go',
    perl: '.pl',
    rust: '.rs',
    scala: '.scala',
    haskell: '.hs',
    lua: '.lua',
    shell: '.sh',
    sql: '.sql',
    html: '.html',
    css: '.css'
};
const generateRandomString = (length, lowercase = false)=>{
    const chars = 'ABCDEFGHJKLMNPQRSTUVWXY3456789' // excluding similar looking characters like Z, 2, I, 1, O, 0
    ;
    let result = '';
    for(let i = 0; i < length; i++){
        result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return lowercase ? result.toLowerCase() : result;
};
const CodeBlock = /*#__PURE__*/ memo((props)=>{
    const { language, value, className, headerClassName, codeClassName, showHeader = true } = props;
    const { isCopied, copyToClipboard } = useCopyToClipboard({
        timeout: 2000
    });
    const codeRef = useRef(null);
    useEffect(()=>{
        if (codeRef.current && codeRef.current.dataset.highlighted !== 'yes') {
            hljs.highlightElement(codeRef.current);
        }
    }, [
        language,
        value
    ]);
    const downloadAsFile = ()=>{
        if (typeof window === 'undefined') {
            return;
        }
        const fileExtension = programmingLanguages[language] || '.file';
        const suggestedFileName = `file-${generateRandomString(3, true)}${fileExtension}`;
        const fileName = window.prompt('Enter file name', suggestedFileName);
        if (!fileName) {
            // User pressed cancel on prompt.
            return;
        }
        const blob = new Blob([
            value
        ], {
            type: 'text/plain'
        });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.download = fileName;
        link.href = url;
        link.style.display = 'none';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        URL.revokeObjectURL(url);
    };
    const onCopy = ()=>{
        if (isCopied) return;
        copyToClipboard(value);
    };
    return /*#__PURE__*/ jsxs("div", {
        className: cn('codeblock border-border relative w-full rounded-lg border bg-[#fafafa] py-2', className),
        children: [
            showHeader && /*#__PURE__*/ jsxs("div", {
                className: cn('flex w-full items-center justify-between px-4', headerClassName),
                children: [
                    /*#__PURE__*/ jsx("span", {
                        className: "text-xs lowercase",
                        children: language
                    }),
                    /*#__PURE__*/ jsxs("div", {
                        className: "flex items-center space-x-1",
                        children: [
                            /*#__PURE__*/ jsxs(Button, {
                                variant: "ghost",
                                onClick: downloadAsFile,
                                size: "icon",
                                className: "size-8",
                                children: [
                                    /*#__PURE__*/ jsx(Download, {
                                        className: "size-4"
                                    }),
                                    /*#__PURE__*/ jsx("span", {
                                        className: "sr-only",
                                        children: "Download"
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsxs(Button, {
                                variant: "ghost",
                                size: "icon",
                                onClick: onCopy,
                                className: "size-8",
                                children: [
                                    isCopied ? /*#__PURE__*/ jsx(Check, {
                                        className: "size-4"
                                    }) : /*#__PURE__*/ jsx(Copy, {
                                        className: "size-4"
                                    }),
                                    /*#__PURE__*/ jsx("span", {
                                        className: "sr-only",
                                        children: "Copy code"
                                    })
                                ]
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsx("pre", {
                children: /*#__PURE__*/ jsx("code", {
                    ref: codeRef,
                    className: cn(`language-${language} rounded-lg border border-none font-mono`, codeClassName),
                    children: value
                })
            })
        ]
    });
});
CodeBlock.displayName = 'CodeBlock';

const PDFViewer = /*#__PURE__*/ lazy(()=>import('@llamaindex/pdf-viewer').then((m)=>({
            default: m.PDFViewer
        })));
const PdfFocusProvider = /*#__PURE__*/ lazy(()=>import('@llamaindex/pdf-viewer').then((m)=>({
            default: m.PdfFocusProvider
        })));
function PdfDialog(props) {
    return /*#__PURE__*/ jsxs(Drawer, {
        direction: "left",
        children: [
            /*#__PURE__*/ jsx(DrawerTrigger, {
                asChild: true,
                children: props.trigger
            }),
            /*#__PURE__*/ jsxs(DrawerContent, {
                className: "mt-24 h-full max-h-[96%] w-full md:w-3/5",
                children: [
                    /*#__PURE__*/ jsxs(DrawerHeader, {
                        className: "flex flex-col gap-4 sm:flex-row sm:justify-between",
                        children: [
                            /*#__PURE__*/ jsxs("div", {
                                className: "space-y-2",
                                children: [
                                    /*#__PURE__*/ jsx(DrawerTitle, {
                                        children: "PDF Content"
                                    }),
                                    /*#__PURE__*/ jsxs(DrawerDescription, {
                                        className: "break-all",
                                        children: [
                                            "File URL:",
                                            ' ',
                                            /*#__PURE__*/ jsx("a", {
                                                className: "hover:text-blue-900",
                                                href: props.url,
                                                target: "_blank",
                                                rel: "noopener",
                                                children: props.url
                                            })
                                        ]
                                    })
                                ]
                            }),
                            /*#__PURE__*/ jsx(DrawerClose, {
                                asChild: true,
                                children: /*#__PURE__*/ jsx(Button, {
                                    variant: "outline",
                                    className: "w-full sm:w-auto",
                                    children: "Close"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsx("div", {
                        className: "m-4",
                        children: /*#__PURE__*/ jsx(PdfFocusProvider, {
                            children: /*#__PURE__*/ jsx(PDFViewer, {
                                file: {
                                    id: props.documentId,
                                    url: props.url
                                }
                            })
                        })
                    })
                ]
            })
        ]
    });
}

function SourceNumberButton({ index, className }) {
    return /*#__PURE__*/ jsx("span", {
        className: cn('inline-flex h-5 w-5 items-center justify-center rounded-full bg-gray-100 text-xs text-black', className),
        children: index + 1
    });
}

const DocxIcon = ({ width = 40, height = 40, className })=>{
    return /*#__PURE__*/ jsxs("svg", {
        width: width,
        height: height,
        viewBox: "-4 0 64 64",
        xmlns: "http://www.w3.org/2000/svg",
        className: className,
        children: [
            /*#__PURE__*/ jsxs("g", {
                fillRule: "evenodd",
                children: [
                    /*#__PURE__*/ jsx("path", {
                        d: "m5.11 0a5.07 5.07 0 0 0 -5.11 5v53.88a5.07 5.07 0 0 0 5.11 5.12h45.78a5.07 5.07 0 0 0 5.11-5.12v-38.6l-18.94-20.28z",
                        fill: "#107cad"
                    }),
                    /*#__PURE__*/ jsx("path", {
                        d: "m56 20.35v1h-12.82s-6.31-1.26-6.13-6.71c0 0 .21 5.71 6 5.71z",
                        fill: "#084968"
                    }),
                    /*#__PURE__*/ jsx("path", {
                        d: "m37.07 0v14.56a5.78 5.78 0 0 0 6.11 5.79h12.82z",
                        fill: "#90d0fe",
                        opacity: ".5"
                    })
                ]
            }),
            /*#__PURE__*/ jsx("path", {
                d: "m14.24 53.86h-3a1.08 1.08 0 0 1 -1.08-1.08v-9.85a1.08 1.08 0 0 1 1.08-1.08h3a6 6 0 1 1 0 12zm0-10.67h-2.61v9.34h2.61a4.41 4.41 0 0 0 4.61-4.66 4.38 4.38 0 0 0 -4.61-4.68zm14.42 10.89a5.86 5.86 0 0 1 -6-6.21 6 6 0 1 1 11.92 0 5.87 5.87 0 0 1 -5.92 6.21zm0-11.09c-2.7 0-4.41 2.07-4.41 4.88s1.71 4.88 4.41 4.88 4.41-2.09 4.41-4.88-1.72-4.87-4.41-4.87zm18.45.38a.75.75 0 0 1 .2.52.71.71 0 0 1 -.7.72.64.64 0 0 1 -.51-.24 4.06 4.06 0 0 0 -3-1.38 4.61 4.61 0 0 0 -4.63 4.88 4.63 4.63 0 0 0 4.63 4.88 4 4 0 0 0 3-1.37.7.7 0 0 1 .51-.24.72.72 0 0 1 .7.74.78.78 0 0 1 -.2.51 5.33 5.33 0 0 1 -4 1.69 6.22 6.22 0 0 1 0-12.43 5.26 5.26 0 0 1 4 1.72z",
                fill: "#ffffff"
            })
        ]
    });
};

const PDFIcon = ({ className, width = 40, height = 40 })=>{
    return /*#__PURE__*/ jsx("svg", {
        width: width,
        height: height,
        version: "1.1",
        id: "Layer_1",
        xmlns: "http://www.w3.org/2000/svg",
        xmlnsXlink: "http://www.w3.org/1999/xlink",
        viewBox: "0 0 309.267 309.267",
        className: className,
        children: /*#__PURE__*/ jsxs("g", {
            children: [
                /*#__PURE__*/ jsx("path", {
                    style: {
                        fill: '#E2574C'
                    },
                    d: "M38.658,0h164.23l87.049,86.711v203.227c0,10.679-8.659,19.329-19.329,19.329H38.658 c-10.67,0-19.329-8.65-19.329-19.329V19.329C19.329,8.65,27.989,0,38.658,0z"
                }),
                /*#__PURE__*/ jsx("path", {
                    style: {
                        fill: '#B53629'
                    },
                    d: "M289.658,86.981h-67.372c-10.67,0-19.329-8.659-19.329-19.329V0.193L289.658,86.981z"
                }),
                /*#__PURE__*/ jsx("path", {
                    style: {
                        fill: '#FFFFFF'
                    },
                    d: "M217.434,146.544c3.238,0,4.823-2.822,4.823-5.557c0-2.832-1.653-5.567-4.823-5.567h-18.44 c-3.605,0-5.615,2.986-5.615,6.282v45.317c0,4.04,2.3,6.282,5.412,6.282c3.093,0,5.403-2.242,5.403-6.282v-12.438h11.153 c3.46,0,5.19-2.832,5.19-5.644c0-2.754-1.73-5.49-5.19-5.49h-11.153v-16.903C204.194,146.544,217.434,146.544,217.434,146.544z M155.107,135.42h-13.492c-3.663,0-6.263,2.513-6.263,6.243v45.395c0,4.629,3.74,6.079,6.417,6.079h14.159 c16.758,0,27.824-11.027,27.824-28.047C183.743,147.095,173.325,135.42,155.107,135.42z M155.755,181.946h-8.225v-35.334h7.413 c11.221,0,16.101,7.529,16.101,17.918C171.044,174.253,166.25,181.946,155.755,181.946z M106.33,135.42H92.964 c-3.779,0-5.886,2.493-5.886,6.282v45.317c0,4.04,2.416,6.282,5.663,6.282s5.663-2.242,5.663-6.282v-13.231h8.379 c10.341,0,18.875-7.326,18.875-19.107C125.659,143.152,117.425,135.42,106.33,135.42z M106.108,163.158h-7.703v-17.097h7.703 c4.755,0,7.78,3.711,7.78,8.553C113.878,159.447,110.863,163.158,106.108,163.158z"
                })
            ]
        })
    });
};

const SheetIcon = ()=>/*#__PURE__*/ jsxs("svg", {
        width: "49px",
        height: "67px",
        viewBox: "0 0 49 67",
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg",
        xmlnsXlink: "http://www.w3.org/1999/xlink",
        children: [
            /*#__PURE__*/ jsx("title", {
                children: "Sheets-icon"
            }),
            /*#__PURE__*/ jsx("desc", {
                children: "Created with Sketch."
            }),
            /*#__PURE__*/ jsxs("defs", {
                children: [
                    /*#__PURE__*/ jsx("path", {
                        d: "M29.5833333,0 L4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,17.75 L29.5833333,0 Z",
                        id: "path-1"
                    }),
                    /*#__PURE__*/ jsxs("linearGradient", {
                        x1: "50.0053945%",
                        y1: "8.58610612%",
                        x2: "50.0053945%",
                        y2: "100.013939%",
                        id: "linearGradient-7",
                        children: [
                            /*#__PURE__*/ jsx("stop", {
                                stopColor: "#263238",
                                stopOpacity: "0.2",
                                offset: "0%"
                            }),
                            /*#__PURE__*/ jsx("stop", {
                                stopColor: "#263238",
                                stopOpacity: "0.02",
                                offset: "100%"
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsxs("radialGradient", {
                        cx: "3.16804688%",
                        cy: "2.71744318%",
                        fx: "3.16804688%",
                        fy: "2.71744318%",
                        r: "161.248516%",
                        gradientTransform: "translate(0.031680,0.027174),scale(1.000000,0.727273),translate(-0.031680,-0.027174)",
                        id: "radialGradient-16",
                        children: [
                            /*#__PURE__*/ jsx("stop", {
                                stopColor: "#FFFFFF",
                                stopOpacity: "0.1",
                                offset: "0%"
                            }),
                            /*#__PURE__*/ jsx("stop", {
                                stopColor: "#FFFFFF",
                                stopOpacity: "0",
                                offset: "100%"
                            })
                        ]
                    })
                ]
            }),
            /*#__PURE__*/ jsx("g", {
                id: "Page-1",
                stroke: "none",
                strokeWidth: "1",
                fill: "none",
                fillRule: "evenodd",
                children: /*#__PURE__*/ jsx("g", {
                    id: "Consumer-Apps-Sheets-Large-VD-R8-",
                    transform: "translate(-451.000000, -451.000000)",
                    children: /*#__PURE__*/ jsx("g", {
                        id: "Hero",
                        transform: "translate(0.000000, 63.000000)",
                        children: /*#__PURE__*/ jsx("g", {
                            id: "Personal",
                            transform: "translate(277.000000, 299.000000)",
                            children: /*#__PURE__*/ jsx("g", {
                                id: "Sheets-icon",
                                transform: "translate(174.833333, 89.958333)",
                                children: /*#__PURE__*/ jsxs("g", {
                                    id: "Group",
                                    children: [
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-2",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("path", {
                                                    d: "M29.5833333,0 L4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,17.75 L36.9791667,10.3541667 L29.5833333,0 Z",
                                                    id: "Path",
                                                    fill: "#0F9D58",
                                                    fillRule: "nonzero",
                                                    mask: "url(#mask-2)"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-4",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("path", {
                                                    d: "M11.8333333,31.8020833 L11.8333333,53.25 L35.5,53.25 L35.5,31.8020833 L11.8333333,31.8020833 Z M22.1875,50.2916667 L14.7916667,50.2916667 L14.7916667,46.59375 L22.1875,46.59375 L22.1875,50.2916667 Z M22.1875,44.375 L14.7916667,44.375 L14.7916667,40.6770833 L22.1875,40.6770833 L22.1875,44.375 Z M22.1875,38.4583333 L14.7916667,38.4583333 L14.7916667,34.7604167 L22.1875,34.7604167 L22.1875,38.4583333 Z M32.5416667,50.2916667 L25.1458333,50.2916667 L25.1458333,46.59375 L32.5416667,46.59375 L32.5416667,50.2916667 Z M32.5416667,44.375 L25.1458333,44.375 L25.1458333,40.6770833 L32.5416667,40.6770833 L32.5416667,44.375 Z M32.5416667,38.4583333 L25.1458333,38.4583333 L25.1458333,34.7604167 L32.5416667,34.7604167 L32.5416667,38.4583333 Z",
                                                    id: "Shape",
                                                    fill: "#F1F1F1",
                                                    fillRule: "nonzero",
                                                    mask: "url(#mask-4)"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-6",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("polygon", {
                                                    id: "Path",
                                                    fill: "url(#linearGradient-7)",
                                                    fillRule: "nonzero",
                                                    mask: "url(#mask-6)",
                                                    points: "30.8813021 16.4520313 47.3333333 32.9003646 47.3333333 17.75"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-9",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("g", {
                                                    id: "Group",
                                                    mask: "url(#mask-9)",
                                                    children: /*#__PURE__*/ jsx("g", {
                                                        transform: "translate(26.625000, -2.958333)",
                                                        children: /*#__PURE__*/ jsx("path", {
                                                            d: "M2.95833333,2.95833333 L2.95833333,16.2708333 C2.95833333,18.7225521 4.94411458,20.7083333 7.39583333,20.7083333 L20.7083333,20.7083333 L2.95833333,2.95833333 Z",
                                                            id: "Path",
                                                            fill: "#87CEAC",
                                                            fillRule: "nonzero"
                                                        })
                                                    })
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-11",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("path", {
                                                    d: "M4.4375,0 C1.996875,0 0,1.996875 0,4.4375 L0,4.80729167 C0,2.36666667 1.996875,0.369791667 4.4375,0.369791667 L29.5833333,0.369791667 L29.5833333,0 L4.4375,0 Z",
                                                    id: "Path",
                                                    fillOpacity: "0.2",
                                                    fill: "#FFFFFF",
                                                    fillRule: "nonzero",
                                                    mask: "url(#mask-11)"
                                                })
                                            ]
                                        }),
                                        /*#__PURE__*/ jsxs("g", {
                                            id: "Clipped",
                                            children: [
                                                /*#__PURE__*/ jsx("mask", {
                                                    id: "mask-13",
                                                    fill: "white",
                                                    children: /*#__PURE__*/ jsx("use", {
                                                        xlinkHref: "#path-1"
                                                    })
                                                }),
                                                /*#__PURE__*/ jsx("path", {
                                                    d: "M42.8958333,64.7135417 L4.4375,64.7135417 C1.996875,64.7135417 0,62.7166667 0,60.2760417 L0,60.6458333 C0,63.0864583 1.996875,65.0833333 4.4375,65.0833333 L42.8958333,65.0833333 C45.3364583,65.0833333 47.3333333,63.0864583 47.3333333,60.6458333 L47.3333333,25.1666667 L42.8958333,21.0208333 L42.8958333,64.7135417 Z",
                                                    id: "Path",
                                                    fill: "url(#radialGradient-16)",
                                                    fillRule: "nonzero",
                                                    mask: "url(#mask-13)"
                                                })
                                            ]
                                        })
                                    ]
                                })
                            })
                        })
                    })
                })
            })
        ]
    });

const TxtIcon = ({ className, width = 40, height = 40 })=>{
    return /*#__PURE__*/ jsxs("svg", {
        width: width,
        height: height,
        version: "1.1",
        id: "Layer_1",
        xmlns: "http://www.w3.org/2000/svg",
        xmlnsXlink: "http://www.w3.org/1999/xlink",
        viewBox: "0 0 512 512",
        className: className,
        children: [
            /*#__PURE__*/ jsx("path", {
                style: {
                    fill: '#E2E5E7'
                },
                d: "M128,0c-17.6,0-32,14.4-32,32v448c0,17.6,14.4,32,32,32h320c17.6,0,32-14.4,32-32V128L352,0H128z"
            }),
            /*#__PURE__*/ jsx("path", {
                style: {
                    fill: '#B0B7BD'
                },
                d: "M384,128h96L352,0v96C352,113.6,366.4,128,384,128z"
            }),
            /*#__PURE__*/ jsx("polygon", {
                style: {
                    fill: '#CAD1D8'
                },
                points: "480,224 384,128 480,128 "
            }),
            /*#__PURE__*/ jsx("path", {
                style: {
                    fill: '#576D7E'
                },
                d: "M416,416c0,8.8-7.2,16-16,16H48c-8.8,0-16-7.2-16-16V256c0-8.8,7.2-16,16-16h352c8.8,0,16,7.2,16,16V416z"
            }),
            /*#__PURE__*/ jsxs("g", {
                children: [
                    /*#__PURE__*/ jsx("path", {
                        style: {
                            fill: '#FFFFFF'
                        },
                        d: "M132.784,311.472H110.4c-11.136,0-11.136-16.368,0-16.368h60.512c11.392,0,11.392,16.368,0,16.368h-21.248v64.592c0,11.12-16.896,11.392-16.896,0v-64.592H132.784z"
                    }),
                    /*#__PURE__*/ jsx("path", {
                        style: {
                            fill: '#FFFFFF'
                        },
                        d: "M224.416,326.176l22.272-27.888c6.656-8.688,19.568,2.432,12.288,10.752c-7.68,9.088-15.728,18.944-23.424,29.024l26.112,32.496c7.024,9.6-7.04,18.816-13.952,9.344l-23.536-30.192l-23.152,30.832c-6.528,9.328-20.992-1.152-13.68-9.856l25.696-32.624c-8.048-10.096-15.856-19.936-23.664-29.024c-8.064-9.6,6.912-19.44,12.784-10.48L224.416,326.176z"
                    }),
                    /*#__PURE__*/ jsx("path", {
                        style: {
                            fill: '#FFFFFF'
                        },
                        d: "M298.288,311.472H275.92c-11.136,0-11.136-16.368,0-16.368h60.496c11.392,0,11.392,16.368,0,16.368h-21.232v64.592c0,11.12-16.896,11.392-16.896,0V311.472z"
                    })
                ]
            }),
            /*#__PURE__*/ jsx("path", {
                style: {
                    fill: '#CAD1D8'
                },
                d: "M400,432H96v16h304c8.8,0,16-7.2,16-16v-16C416,424.8,408.8,432,400,432z"
            })
        ]
    });
};

function DocumentInfo({ document, className, onRemove, startIndex = 0 }) {
    const { url, sources } = document;
    const urlParts = url.split('/');
    const fileName = urlParts.length > 0 ? urlParts[urlParts.length - 1] : url;
    var _fileName_split_pop;
    const fileExt = (_fileName_split_pop = fileName == null ? void 0 : fileName.split('.').pop()) != null ? _fileName_split_pop : '';
    const previewFile = {
        name: fileName,
        type: fileExt
    };
    const DocumentDetail = /*#__PURE__*/ jsxs("div", {
        className: `bg-secondary rounded-lg p-2 ${className}`,
        children: [
            /*#__PURE__*/ jsx(DocumentPreviewCard, {
                className: "cursor-pointer",
                file: previewFile,
                onRemove: onRemove
            }),
            /*#__PURE__*/ jsx("div", {
                className: "flex max-w-60 flex-wrap space-x-2 px-2",
                children: sources.map((node, index)=>/*#__PURE__*/ jsx("div", {
                        children: /*#__PURE__*/ jsx(SourceInfo, {
                            node: node,
                            index: startIndex + index
                        })
                    }, node.id))
            })
        ]
    });
    if (url.endsWith('.pdf')) {
        // open internal pdf dialog for pdf files when click document card
        return /*#__PURE__*/ jsx(PdfDialog, {
            documentId: url,
            url: url,
            trigger: DocumentDetail
        });
    }
    // open external link when click document card for other file types
    return /*#__PURE__*/ jsx("div", {
        onClick: ()=>window.open(url, '_blank'),
        children: DocumentDetail
    });
}
function SourceInfo({ node, index }) {
    if (!node) return /*#__PURE__*/ jsx(SourceNumberButton, {
        index: index
    });
    return /*#__PURE__*/ jsxs(HoverCard, {
        children: [
            /*#__PURE__*/ jsx(HoverCardTrigger, {
                className: "cursor-default",
                onClick: (e)=>{
                    e.preventDefault();
                    e.stopPropagation();
                },
                children: /*#__PURE__*/ jsx(SourceNumberButton, {
                    index: index,
                    className: "hover:bg-primary hover:text-white"
                })
            }),
            /*#__PURE__*/ jsx(HoverCardContent, {
                className: "w-[400px] bg-white p-4",
                children: /*#__PURE__*/ jsx(NodeInfo, {
                    nodeInfo: node
                })
            })
        ]
    });
}
function NodeInfo({ nodeInfo }) {
    var // XXX: page_label is used in Python, but page_number is used by Typescript
    _nodeInfo_metadata, _nodeInfo_metadata1;
    const { isCopied, copyToClipboard } = useCopyToClipboard({
        timeout: 1000
    });
    var _nodeInfo_metadata_page_number, _ref;
    const pageNumber = (_ref = (_nodeInfo_metadata_page_number = (_nodeInfo_metadata = nodeInfo.metadata) == null ? void 0 : _nodeInfo_metadata.page_number) != null ? _nodeInfo_metadata_page_number : (_nodeInfo_metadata1 = nodeInfo.metadata) == null ? void 0 : _nodeInfo_metadata1.page_label) != null ? _ref : null;
    return /*#__PURE__*/ jsxs("div", {
        className: "space-y-4",
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ jsx("span", {
                        className: "font-semibold",
                        children: pageNumber ? `On page ${pageNumber}:` : 'Node content:'
                    }),
                    nodeInfo.text && /*#__PURE__*/ jsx(Button, {
                        onClick: (e)=>{
                            e.stopPropagation();
                            copyToClipboard(nodeInfo.text);
                        },
                        size: "icon",
                        variant: "ghost",
                        className: "h-12 w-12 shrink-0",
                        children: isCopied ? /*#__PURE__*/ jsx(Check, {
                            className: "h-4 w-4"
                        }) : /*#__PURE__*/ jsx(Copy, {
                            className: "h-4 w-4"
                        })
                    })
                ]
            }),
            nodeInfo.text && /*#__PURE__*/ jsxs("pre", {
                className: "max-h-[200px] overflow-auto whitespace-pre-line",
                children: [
                    "“",
                    nodeInfo.text,
                    "”"
                ]
            })
        ]
    });
}
const FileIconMap = {
    csv: /*#__PURE__*/ jsx(SheetIcon, {}),
    pdf: /*#__PURE__*/ jsx(PDFIcon, {}),
    docx: /*#__PURE__*/ jsx(DocxIcon, {}),
    txt: /*#__PURE__*/ jsx(TxtIcon, {})
};
function DocumentPreviewCard(props) {
    const { onRemove, file, className } = props;
    var _FileIconMap_file_type;
    return /*#__PURE__*/ jsxs("div", {
        className: cn('bg-secondary relative w-60 max-w-60 rounded-lg p-2 text-sm', className),
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex flex-row items-center gap-2",
                children: [
                    /*#__PURE__*/ jsx("div", {
                        className: "relative flex h-8 w-8 shrink-0 items-center justify-center overflow-hidden rounded-md",
                        children: (_FileIconMap_file_type = FileIconMap[file.type]) != null ? _FileIconMap_file_type : /*#__PURE__*/ jsx(FileIcon, {})
                    }),
                    /*#__PURE__*/ jsxs("div", {
                        className: "overflow-hidden",
                        children: [
                            /*#__PURE__*/ jsxs("div", {
                                className: "truncate font-semibold",
                                children: [
                                    file.name,
                                    " ",
                                    file.size ? `(${inKB(file.size)} KB)` : ''
                                ]
                            }),
                            file.type && /*#__PURE__*/ jsx("div", {
                                className: "text-token-text-tertiary flex items-center gap-2 truncate",
                                children: /*#__PURE__*/ jsxs("span", {
                                    children: [
                                        file.type.toUpperCase(),
                                        " File"
                                    ]
                                })
                            })
                        ]
                    })
                ]
            }),
            onRemove && /*#__PURE__*/ jsx("div", {
                className: cn('absolute -right-2 -top-2 z-10 h-6 w-6 rounded-full bg-gray-500 text-white'),
                children: /*#__PURE__*/ jsx(XCircleIcon, {
                    className: "h-6 w-6 rounded-full bg-gray-500 text-white",
                    onClick: (e)=>{
                        e.stopPropagation();
                        onRemove();
                    }
                })
            })
        ]
    });
}
function inKB(size) {
    return Math.round(size / 1024 * 10) / 10;
}

function Citation({ index }) {
    return /*#__PURE__*/ jsx(SourceNumberButton, {
        index: index
    });
}

function isMessageAnnotation(annotation) {
    return annotation !== null && typeof annotation === 'object' && 'type' in annotation && 'data' in annotation && typeof annotation.type === 'string';
}

const INLINE_ANNOTATION_KEY = 'annotation';
/**
 * Parses and validates an inline annotation from a code block
 * @param language - The language identifier from the markdown code block
 * @param codeValue - The raw code content from a markdown code block
 * @returns The parsed annotation if valid, null if not an annotation or invalid
 */ function parseInlineAnnotation(language, codeValue) {
    // Check if this is an inline annotation code block
    if (language !== INLINE_ANNOTATION_KEY) {
        return null;
    }
    try {
        const annotation = tryParse(codeValue);
        if (annotation === null || !isMessageAnnotation(annotation)) {
            console.warn(`Invalid inline annotation: ${codeValue}, expected an object`);
            return null;
        }
        return annotation;
    } catch (error) {
        console.warn(`Failed to parse inline annotation: ${codeValue}`, error);
        return null;
    }
}
// try to parse the code value as a JSON object and return null if it fails
function tryParse(codeValue) {
    try {
        return JSON.parse(codeValue);
    } catch (error) {
        return null;
    }
}

const MemoizedReactMarkdown = /*#__PURE__*/ memo(ReactMarkdown, (prevProps, nextProps)=>prevProps.children === nextProps.children && prevProps.className === nextProps.className);
// Inspired by https://github.com/remarkjs/react-markdown/issues/785#issuecomment-2307567823
const preprocessLaTeX = (content)=>{
    // First, we need to protect code blocks and inline code from LaTeX processing
    const codeBlockPlaceholders = [];
    const inlineCodePlaceholders = [];
    // Temporarily replace code blocks with placeholders
    let processedContent = content.replace(/```[\s\S]*?```/g, (match)=>{
        const placeholder = `__CODE_BLOCK_${codeBlockPlaceholders.length}__`;
        codeBlockPlaceholders.push(match);
        return placeholder;
    });
    // Temporarily replace inline code with placeholders
    processedContent = processedContent.replace(/`[^`\n]+`/g, (match)=>{
        const placeholder = `__INLINE_CODE_${inlineCodePlaceholders.length}__`;
        inlineCodePlaceholders.push(match);
        return placeholder;
    });
    // Escape dollar signs to prevent them from being treated as LaTeX math delimiters
    // For example, in "$10 million and $20 million", the content between the dollar signs might be incorrectly parsed as a math block
    // Replacing $ with \$ avoids this issue
    const escapedDollarSigns = processedContent.replace(/\$/g, '\\$');
    // Replace block-level LaTeX delimiters \[ \] with $$ $$
    const blockProcessedContent = escapedDollarSigns.replace(/\\\[([\s\S]*?)\\\]/g, (_, equation)=>`$$${equation}$$`);
    // Replace inline LaTeX delimiters \( \) with $ $
    let inlineProcessedContent = blockProcessedContent.replace(/\\\(([\s\S]*?)\\\)/g, (_, equation)=>`$${equation}$`);
    // Restore code blocks
    codeBlockPlaceholders.forEach((codeBlock, index)=>{
        inlineProcessedContent = inlineProcessedContent.replace(`__CODE_BLOCK_${index}__`, codeBlock);
    });
    // Restore inline code
    inlineCodePlaceholders.forEach((inlineCode, index)=>{
        inlineProcessedContent = inlineProcessedContent.replace(`__INLINE_CODE_${index}__`, inlineCode);
    });
    return inlineProcessedContent;
};
const preprocessMedia = (content)=>{
    // Remove `sandbox:` from the beginning of the URL
    // to fix OpenAI's models issue appending `sandbox:` to the relative URL
    return content.replace(/(sandbox|attachment|snt):/g, '');
};
/**
 * Convert citation flags [citation:id] to markdown links [citation:id]()
 */ const preprocessCitations = (input)=>{
    let content = input;
    // Match citation format [citation:node_id]
    // Handle complete citations
    const idToIndexRegex = /\[citation:([^\]]+)\]/g;
    content = content.replace(idToIndexRegex, (match, citationId)=>{
        const trimmedId = citationId.trim();
        // Use a special format that doesn't get styled as a link by markdown-it
        return `[citation:${trimmedId}](javascript:void(0))`;
    });
    // For incomplete citations - any [citation: pattern that isn't closed with ]
    // Look for open bracket, citation text, then end of string or any char except closing bracket
    const incompleteRegex = /\[citation:[^\]]*$/g;
    content = content.replace(incompleteRegex, '');
    return content;
};
const preprocessContent = (content)=>{
    return preprocessCitations(preprocessLaTeX(preprocessMedia(content)));
};
function Markdown({ content, sources, backend, citationComponent: CitationComponent, className: customClassName, languageRenderers, annotationRenderers }) {
    const processedContent = preprocessContent(content);
    return /*#__PURE__*/ jsx("div", {
        children: /*#__PURE__*/ jsx(MemoizedReactMarkdown, {
            className: cn('prose dark:prose-invert prose-p:leading-relaxed prose-pre:p-0 custom-markdown break-words', customClassName),
            remarkPlugins: [
                remarkGfm,
                remarkMath
            ],
            rehypePlugins: [
                rehypeKatex
            ],
            components: {
                p ({ children }) {
                    return /*#__PURE__*/ jsx("div", {
                        className: "mb-2 last:mb-0",
                        children: children
                    });
                },
                code (_param) {
                    var { inline, className, children } = _param, props = _(_param, [
                        "inline",
                        "className",
                        "children"
                    ]);
                    if (children.length) {
                        if (children[0] === '▍') {
                            return /*#__PURE__*/ jsx("span", {
                                className: "mt-1 animate-pulse cursor-default",
                                children: "▍"
                            });
                        }
                        children[0] = children[0].replace('`▍`', '▍');
                    }
                    const match = /language-(\w+)/.exec(className || '');
                    const language = match && match[1] || '';
                    const codeValue = String(children).replace(/\n$/, '');
                    const annotation = parseInlineAnnotation(language, codeValue);
                    if (annotation) {
                        // Check if we have a specific renderer for it
                        if (annotationRenderers == null ? void 0 : annotationRenderers[annotation.type]) {
                            const CustomRenderer = annotationRenderers[annotation.type];
                            return /*#__PURE__*/ jsx("div", {
                                className: "custom-renderer my-4",
                                children: /*#__PURE__*/ jsx(CustomRenderer, {
                                    data: annotation.data
                                })
                            });
                        }
                        // If no custom renderer found, render an error message
                        return /*#__PURE__*/ jsx("div", {
                            className: "mb-2 max-w-full overflow-hidden rounded-md border border-red-200 bg-red-50 p-3 dark:border-red-800 dark:bg-red-900/20",
                            children: /*#__PURE__*/ jsxs("div", {
                                className: "overflow-wrap-anywhere whitespace-pre-wrap break-words text-sm text-red-800 dark:text-red-200",
                                children: [
                                    /*#__PURE__*/ jsx("strong", {
                                        children: "Annotation Render Error:"
                                    }),
                                    " No renderer found for annotation type “",
                                    annotation.type,
                                    "”."
                                ]
                            })
                        });
                    }
                    if (inline) {
                        return /*#__PURE__*/ jsx("code", _$1({
                            className: className
                        }, props, {
                            children: children
                        }));
                    }
                    // Check for custom language renderer
                    if (languageRenderers == null ? void 0 : languageRenderers[language]) {
                        const CustomRenderer = languageRenderers[language];
                        return /*#__PURE__*/ jsx(CustomRenderer, {
                            code: codeValue,
                            className: "mb-2"
                        });
                    }
                    return /*#__PURE__*/ jsx(CodeBlock, _$1({
                        language: language,
                        value: codeValue,
                        className: "mb-2"
                    }, props), Math.random());
                },
                a ({ href, children }) {
                    // If href starts with `{backend}/api/files`, then it's a local document and we use DocumentInfo for rendering
                    if (href == null ? void 0 : href.startsWith(`${backend}/api/files`)) {
                        var _href_split_pop;
                        // Check if the file is document file type
                        const fileExtension = (_href_split_pop = href.split('.').pop()) == null ? void 0 : _href_split_pop.toLowerCase();
                        if (fileExtension) {
                            return /*#__PURE__*/ jsx(DocumentInfo, {
                                document: {
                                    url: backend ? new URL(decodeURIComponent(href)).href : href,
                                    sources: []
                                },
                                className: "mb-2 mt-2"
                            });
                        }
                    }
                    // Handle citation links
                    if (Array.isArray(children) && typeof children[0] === 'string' && (children[0].startsWith('citation:') || (href == null ? void 0 : href.startsWith('citation:')))) {
                        // Extract the nodeId from the citation link
                        const nodeId = children[0].includes('citation:') ? children[0].split('citation:')[1].trim() : (href == null ? void 0 : href.replace('citation:', '').trim()) || '';
                        const nodeIndex = sources == null ? void 0 : sources.nodes.findIndex((node)=>node.id === nodeId);
                        const sourceNode = sources == null ? void 0 : sources.nodes.find((node)=>node.id === nodeId);
                        if (nodeIndex !== undefined && nodeIndex > -1 && sourceNode) {
                            return CitationComponent ? /*#__PURE__*/ jsx(CitationComponent, {
                                index: nodeIndex,
                                node: sourceNode
                            }) : /*#__PURE__*/ jsx(Citation, {
                                index: nodeIndex,
                                node: sourceNode
                            });
                        }
                        return null;
                    }
                    return /*#__PURE__*/ jsx("a", {
                        href: href,
                        target: "_blank",
                        rel: "noopener",
                        children: children
                    });
                }
            },
            children: processedContent
        })
    });
}

const AgentIcons = {
    bot: icons.Bot,
    researcher: icons.ScanSearch,
    writer: icons.PenLine,
    reviewer: icons.MessageCircle,
    publisher: icons.BookCheck
};
function ChatAgentEvents({ data, isFinished, isLast }) {
    const events = useMemo(()=>mergeAdjacentEvents(data), [
        data
    ]);
    return /*#__PURE__*/ jsx("div", {
        className: "pl-2",
        children: /*#__PURE__*/ jsx("div", {
            className: "space-y-4 text-sm",
            children: events.map((eventItem, index)=>/*#__PURE__*/ jsx(AgentEventContent, {
                    event: eventItem,
                    isLast: isLast,
                    isFinished: isFinished
                }, index))
        })
    });
}
const MAX_TEXT_LENGTH = 150;
function TextContent({ agent, step }) {
    const { displayText, showMore } = useMemo(()=>({
            displayText: step.text.slice(0, MAX_TEXT_LENGTH),
            showMore: step.text.length > MAX_TEXT_LENGTH
        }), [
        step.text
    ]);
    return /*#__PURE__*/ jsxs("div", {
        className: "whitespace-break-spaces",
        children: [
            !showMore && /*#__PURE__*/ jsx("span", {
                children: step.text
            }),
            showMore && /*#__PURE__*/ jsxs("div", {
                children: [
                    /*#__PURE__*/ jsxs("span", {
                        children: [
                            displayText,
                            "..."
                        ]
                    }),
                    /*#__PURE__*/ jsx(AgentEventDialog, {
                        content: step.text,
                        title: `Agent "${agent}"`,
                        children: /*#__PURE__*/ jsx("span", {
                            className: "ml-2 cursor-pointer font-semibold underline",
                            children: "Show more"
                        })
                    })
                ]
            })
        ]
    });
}
function ProgressContent({ step }) {
    const progressValue = step.progress.total !== 0 ? Math.round((step.progress.current + 1) / step.progress.total * 100) : 0;
    return /*#__PURE__*/ jsxs("div", {
        className: "mt-2 space-y-2",
        children: [
            step.text && /*#__PURE__*/ jsx("p", {
                className: "text-muted-foreground text-sm",
                children: step.text
            }),
            /*#__PURE__*/ jsx(Progress, {
                value: progressValue,
                className: "h-2 w-full"
            }),
            /*#__PURE__*/ jsxs("p", {
                className: "text-muted-foreground text-sm",
                children: [
                    "Processing ",
                    step.progress.current + 1,
                    " of ",
                    step.progress.total,
                    " steps..."
                ]
            })
        ]
    });
}
function AgentEventContent({ event, isLast, isFinished }) {
    const { agent, steps } = event;
    const AgentIcon = event.icon;
    const textSteps = steps.filter((step)=>!('progress' in step));
    const progressSteps = steps.filter((step)=>'progress' in step);
    // We only show progress at the last step
    // TODO: once we support steps that work in parallel, we need to update this
    const lastProgressStep = progressSteps.length > 0 ? progressSteps[progressSteps.length - 1] : undefined;
    return /*#__PURE__*/ jsxs("div", {
        className: "fadein-agent flex items-center gap-4 border-b pb-4",
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex w-[100px] flex-col items-center gap-2",
                children: [
                    /*#__PURE__*/ jsxs("div", {
                        className: "relative",
                        children: [
                            isLast && !isFinished && /*#__PURE__*/ jsx("div", {
                                className: "absolute -right-4 -top-0",
                                children: /*#__PURE__*/ jsxs("span", {
                                    className: "relative flex h-3 w-3",
                                    children: [
                                        /*#__PURE__*/ jsx("span", {
                                            className: "absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75"
                                        }),
                                        /*#__PURE__*/ jsx("span", {
                                            className: "relative inline-flex h-3 w-3 rounded-full bg-sky-500"
                                        })
                                    ]
                                })
                            }),
                            /*#__PURE__*/ jsx(AgentIcon, {})
                        ]
                    }),
                    /*#__PURE__*/ jsx("span", {
                        className: "font-bold",
                        children: agent
                    })
                ]
            }),
            textSteps.length > 0 && /*#__PURE__*/ jsxs("div", {
                className: "flex-1",
                children: [
                    /*#__PURE__*/ jsx("ul", {
                        className: "list-decimal space-y-2",
                        children: textSteps.map((step, index)=>/*#__PURE__*/ jsx("li", {
                                children: /*#__PURE__*/ jsx(TextContent, {
                                    agent: agent,
                                    step: step
                                })
                            }, index))
                    }),
                    lastProgressStep && !isFinished && /*#__PURE__*/ jsx(ProgressContent, {
                        step: lastProgressStep
                    })
                ]
            })
        ]
    });
}
function AgentEventDialog(props) {
    return /*#__PURE__*/ jsxs(Drawer, {
        direction: "left",
        children: [
            /*#__PURE__*/ jsx(DrawerTrigger, {
                asChild: true,
                children: props.children
            }),
            /*#__PURE__*/ jsxs(DrawerContent, {
                className: "mt-24 h-full max-h-[96%] w-3/5",
                children: [
                    /*#__PURE__*/ jsxs(DrawerHeader, {
                        className: "flex justify-between",
                        children: [
                            /*#__PURE__*/ jsx("div", {
                                className: "space-y-2",
                                children: /*#__PURE__*/ jsx(DrawerTitle, {
                                    children: props.title
                                })
                            }),
                            /*#__PURE__*/ jsx(DrawerClose, {
                                asChild: true,
                                children: /*#__PURE__*/ jsx(Button, {
                                    variant: "outline",
                                    children: "Close"
                                })
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsx("div", {
                        className: "m-4 overflow-auto",
                        children: /*#__PURE__*/ jsx(Markdown, {
                            content: props.content
                        })
                    })
                ]
            })
        ]
    });
}
function mergeAdjacentEvents(events) {
    const mergedEvents = [];
    for (const event of events){
        const lastMergedEvent = mergedEvents[mergedEvents.length - 1];
        const eventStep = event.data ? {
            text: event.text,
            progress: event.data
        } : {
            text: event.text
        };
        if (lastMergedEvent && lastMergedEvent.agent === event.agent) {
            lastMergedEvent.steps.push(eventStep);
        } else {
            var _AgentIcons_event_agent_toLowerCase;
            mergedEvents.push({
                agent: event.agent,
                steps: [
                    eventStep
                ],
                icon: (_AgentIcons_event_agent_toLowerCase = AgentIcons[event.agent.toLowerCase()]) != null ? _AgentIcons_event_agent_toLowerCase : icons.Bot
            });
        }
    }
    return mergedEvents;
}

function ChatEvents({ data, showLoading }) {
    const [isOpen, setIsOpen] = useState(false);
    const buttonLabel = isOpen ? 'Hide events' : 'Show events';
    const EventIcon = isOpen ? /*#__PURE__*/ jsx(ChevronDown, {
        className: "h-4 w-4"
    }) : /*#__PURE__*/ jsx(ChevronRight, {
        className: "h-4 w-4"
    });
    return /*#__PURE__*/ jsx("div", {
        className: "border-l-2 border-indigo-400 pl-2",
        children: /*#__PURE__*/ jsxs(Collapsible, {
            open: isOpen,
            onOpenChange: setIsOpen,
            children: [
                /*#__PURE__*/ jsx(CollapsibleTrigger, {
                    asChild: true,
                    children: /*#__PURE__*/ jsxs(Button, {
                        variant: "secondary",
                        className: "space-x-2",
                        children: [
                            showLoading ? /*#__PURE__*/ jsx(Loader2, {
                                className: "h-4 w-4 animate-spin"
                            }) : null,
                            /*#__PURE__*/ jsx("span", {
                                children: buttonLabel
                            }),
                            EventIcon
                        ]
                    })
                }),
                /*#__PURE__*/ jsx(CollapsibleContent, {
                    asChild: true,
                    children: /*#__PURE__*/ jsx("div", {
                        className: "mt-4 space-y-2 text-sm",
                        children: data.map((eventItem, index)=>/*#__PURE__*/ jsx("div", {
                                className: "whitespace-break-spaces",
                                children: eventItem.title
                            }, index))
                    })
                })
            ]
        })
    });
}

function ChatFiles({ data, className }) {
    if (!data.files.length) return null;
    return /*#__PURE__*/ jsx("div", {
        className: cn('flex items-center gap-2', className),
        children: data.files.map((file)=>/*#__PURE__*/ jsx(DocumentInfo, {
                document: {
                    url: file.url,
                    sources: []
                },
                className: "mb-2 mt-2"
            }, file.id))
    });
}

function ChatImage({ data }) {
    return /*#__PURE__*/ jsx("div", {
        className: "max-w-[200px] rounded-md shadow-md",
        children: /*#__PURE__*/ jsx("img", {
            src: data.url,
            alt: "chat_image",
            className: "h-auto w-full"
        })
    });
}

function ChatSources({ data }) {
    const documents = useMemo(()=>{
        // group nodes by document (a document must have a URL)
        const nodesByUrl = {};
        data.nodes.filter((node)=>node.url).forEach((node)=>{
            var _nodesByUrl, _key;
            var _node_url;
            const key = (_node_url = node.url) != null ? _node_url : '';
            var _;
            (_ = (_nodesByUrl = nodesByUrl)[_key = key]) != null ? _ : _nodesByUrl[_key] = [];
            nodesByUrl[key].push(node);
        });
        // convert to array of documents
        return Object.entries(nodesByUrl).map(([url, sources])=>({
                url,
                sources
            }));
    }, [
        data.nodes
    ]);
    if (documents.length === 0) return null;
    return /*#__PURE__*/ jsxs("div", {
        className: "space-y-2 text-sm",
        children: [
            /*#__PURE__*/ jsx("div", {
                className: "text-lg font-semibold",
                children: "Sources:"
            }),
            /*#__PURE__*/ jsx("div", {
                className: "flex flex-wrap gap-3",
                children: documents.map((document, index)=>{
                    const startIndex = documents.slice(0, index).reduce((acc, doc)=>acc + doc.sources.length, 0);
                    return /*#__PURE__*/ jsx(DocumentInfo, {
                        document: document,
                        startIndex: startIndex
                    }, document.url);
                })
            })
        ]
    });
}

function SuggestedQuestions({ questions, append, requestData }) {
    const showQuestions = questions.length > 0;
    return showQuestions && /*#__PURE__*/ jsx("div", {
        className: "flex flex-col space-y-2",
        children: questions.map((question, index)=>/*#__PURE__*/ jsxs("a", {
                onClick: ()=>{
                    append({
                        role: 'user',
                        content: question
                    }, {
                        data: requestData
                    });
                },
                className: "cursor-pointer text-sm italic hover:underline",
                children: [
                    '->',
                    " ",
                    question
                ]
            }, index))
    });
}

function StarterQuestions(props) {
    return /*#__PURE__*/ jsx("div", {
        className: cn('w-full', props.className),
        children: /*#__PURE__*/ jsx("div", {
            className: "grid grid-cols-2 gap-3",
            children: props.questions.map((question, i)=>/*#__PURE__*/ jsx(Button, {
                    variant: "outline",
                    onClick: ()=>props.append({
                            role: 'user',
                            content: question
                        }),
                    className: "h-auto whitespace-break-spaces",
                    children: question
                }, i))
        })
    });
}

function ImagePreview({ url, onRemove }) {
    return /*#__PURE__*/ jsxs("div", {
        className: "group relative h-20 w-20",
        children: [
            /*#__PURE__*/ jsx("img", {
                src: url,
                alt: "uploaded_image",
                className: "h-full w-full rounded-xl object-cover hover:brightness-75"
            }),
            /*#__PURE__*/ jsx("div", {
                className: cn('absolute -right-2 -top-2 z-10 hidden h-6 w-6 rounded-full bg-gray-500 text-white group-hover:block'),
                children: /*#__PURE__*/ jsx(XCircleIcon, {
                    className: "h-6 w-6 rounded-full bg-gray-500 text-white",
                    onClick: onRemove
                })
            })
        ]
    });
}

const DEFAULT_INPUT_ID = 'fileInput';
const DEFAULT_FILE_SIZE_LIMIT = 1024 * 1024 * 50 // 50 MB
;
function FileUploader({ config, onFileUpload, onFileError, className }) {
    const [uploading, setUploading] = useState(false);
    const [remainingFiles, setRemainingFiles] = useState(0);
    const inputId = (config == null ? void 0 : config.inputId) || DEFAULT_INPUT_ID;
    const fileSizeLimit = (config == null ? void 0 : config.fileSizeLimit) || DEFAULT_FILE_SIZE_LIMIT;
    const allowedExtensions = config == null ? void 0 : config.allowedExtensions;
    const isFileSizeExceeded = (file)=>{
        return file.size > fileSizeLimit;
    };
    const resetInput = ()=>{
        const fileInput = document.getElementById(inputId);
        fileInput.value = '';
    };
    const onFileChange = (e)=>_$2(function*() {
            const files = Array.from(e.target.files || []);
            if (!files.length) return;
            setUploading(true);
            yield handleUpload(files);
            resetInput();
            setUploading(false);
        })();
    const handleUpload = (files)=>_$2(function*() {
            const onFileUploadError = onFileError || window.alert;
            // Validate files
            // If multiple files with image or multiple images
            if (files.length > 1 && files.some((file)=>file.type.startsWith('image/'))) {
                onFileUploadError('Multiple files with image are not supported');
                return;
            }
            for (const file of files){
                const fileExtension = file.name.split('.').pop() || '';
                if (allowedExtensions && !allowedExtensions.includes(fileExtension)) {
                    onFileUploadError(`Invalid file type. Please select a file with one of these formats: ${allowedExtensions.join(',')}`);
                    return;
                }
                if (isFileSizeExceeded(file)) {
                    onFileUploadError(`File size exceeded. Limit is ${fileSizeLimit / 1024 / 1024} MB`);
                    return;
                }
            }
            setRemainingFiles(files.length);
            for (const file of files){
                yield onFileUpload(file);
                setRemainingFiles((prev)=>prev - 1);
            }
            setRemainingFiles(0);
        })();
    return /*#__PURE__*/ jsxs("div", {
        className: cn('self-stretch', className),
        children: [
            /*#__PURE__*/ jsx("input", {
                type: "file",
                accept: allowedExtensions ? allowedExtensions.join(',') : undefined,
                id: inputId,
                style: {
                    display: 'none'
                },
                onChange: onFileChange,
                disabled: (config == null ? void 0 : config.disabled) || uploading,
                multiple: config == null ? void 0 : config.multiple
            }),
            /*#__PURE__*/ jsx("label", {
                htmlFor: inputId,
                className: cn(buttonVariants({
                    variant: 'secondary',
                    size: 'icon'
                }), 'relative cursor-pointer', uploading && 'opacity-50'),
                children: uploading ? /*#__PURE__*/ jsxs("div", {
                    className: "relative flex h-full w-full items-center justify-center",
                    children: [
                        /*#__PURE__*/ jsx(Loader2, {
                            className: "absolute h-6 w-6 animate-spin"
                        }),
                        remainingFiles > 0 && /*#__PURE__*/ jsx("span", {
                            className: "absolute inset-0 flex items-center justify-center text-xs",
                            children: remainingFiles
                        })
                    ]
                }) : /*#__PURE__*/ jsx(Paperclip, {
                    className: "h-4 w-4 -rotate-45"
                })
            })
        ]
    });
}

const languageExtensions = {
    javascript: javascript({
        jsx: true
    }),
    python: python(),
    html: html(),
    css: css()
};
const getLanguageExtension = (language)=>{
    const extension = languageExtensions[language];
    if (!extension) {
        console.warn(`Unsupported language: ${language}, using javascript editor as fallback`);
        return languageExtensions.javascript;
    }
    return extension;
};
function CodeEditor({ code, onChange, className, language = 'javascript' }) {
    return /*#__PURE__*/ jsx(CodeMirror, {
        className: cn('h-full text-[14px]', className),
        value: code,
        extensions: [
            getLanguageExtension(language)
        ],
        onChange: onChange,
        theme: githubLight
    });
}
function fileExtensionToEditorLang(extension) {
    if ([
        'js',
        'jsx',
        'ts',
        'tsx'
    ].includes(extension)) return 'javascript';
    if (extension === 'py') return 'python';
    if (extension === 'html') return 'html';
    if (extension === 'css') return 'css';
    console.warn(`Unsupported file extension: ${extension}`);
    return undefined;
}

function DocumentEditor({ content, onChange, className, showToolbar = true }) {
    const plugins = [
        headingsPlugin(),
        listsPlugin(),
        linkPlugin(),
        linkDialogPlugin(),
        tablePlugin(),
        markdownShortcutPlugin(),
        thematicBreakPlugin(),
        quotePlugin()
    ];
    if (showToolbar) {
        plugins.push(toolbarPlugin({
            toolbarContents: ()=>/*#__PURE__*/ jsxs(Fragment, {
                    children: [
                        /*#__PURE__*/ jsx(UndoRedo, {}),
                        /*#__PURE__*/ jsx(BoldItalicUnderlineToggles, {}),
                        /*#__PURE__*/ jsx(BlockTypeSelect, {})
                    ]
                })
        }));
    }
    return /*#__PURE__*/ jsx(MDXEditor, {
        className: className,
        onChange: onChange,
        markdown: content,
        plugins: plugins,
        contentEditableClassName: "custom-markdown",
        suppressHtmlProcessing: true,
        onError: (error)=>{
            console.warn('[Chat-UI] Error while parsing markdown in DocumentEditor', error);
        }
    });
}

export { ChatAgentEvents, ChatEvents, ChatFiles, ChatImage, ChatSources, Citation, CodeBlock, CodeEditor, DocumentEditor, DocumentInfo, FileUploader, ImagePreview, Markdown, PdfDialog, StarterQuestions, SuggestedQuestions, fileExtensionToEditorLang, generateRandomString, programmingLanguages };
