'use client';
var _extends = require('@swc/helpers/_/_extends');
var _object_without_properties_loose = require('@swc/helpers/_/_object_without_properties_loose');
var jsxRuntime = require('react/jsx-runtime');
var React = require('react');
var vaul = require('vaul');
var clsx = require('clsx');
var tailwindMerge = require('tailwind-merge');

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n.default = e;
  return n;
}

var React__namespace = /*#__PURE__*/_interopNamespace(React);

function cn(...inputs) {
    return tailwindMerge.twMerge(clsx.clsx(inputs));
}

const Drawer = (_param)=>{
    var { shouldScaleBackground = true } = _param, props = _object_without_properties_loose._(_param, [
        "shouldScaleBackground"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(vaul.Drawer.Root, _extends._({
        shouldScaleBackground: shouldScaleBackground
    }, props));
};
Drawer.displayName = 'Drawer';
const DrawerTrigger = vaul.Drawer.Trigger;
const DrawerPortal = vaul.Drawer.Portal;
const DrawerClose = vaul.Drawer.Close;
const DrawerOverlay = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className } = _param, props = _object_without_properties_loose._(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(vaul.Drawer.Overlay, _extends._({
        ref: ref,
        className: cn('fixed inset-0 z-50 bg-black/80', className)
    }, props));
});
DrawerOverlay.displayName = vaul.Drawer.Overlay.displayName;
const DrawerContent = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className, children } = _param, props = _object_without_properties_loose._(_param, [
        "className",
        "children"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsxs(DrawerPortal, {
        children: [
            /*#__PURE__*/ jsxRuntime.jsx(DrawerOverlay, {}),
            /*#__PURE__*/ jsxRuntime.jsxs(vaul.Drawer.Content, _extends._({
                ref: ref,
                className: cn('bg-background fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border', className)
            }, props, {
                children: [
                    /*#__PURE__*/ jsxRuntime.jsx("div", {
                        className: "bg-muted mx-auto mt-4 h-2 w-[100px] rounded-full"
                    }),
                    children
                ]
            }))
        ]
    });
});
DrawerContent.displayName = 'DrawerContent';
const DrawerHeader = (_param)=>{
    var { className } = _param, props = _object_without_properties_loose._(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx("div", _extends._({
        className: cn('grid gap-1.5 p-4 text-center sm:text-left', className)
    }, props));
};
DrawerHeader.displayName = 'DrawerHeader';
const DrawerTitle = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className } = _param, props = _object_without_properties_loose._(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(vaul.Drawer.Title, _extends._({
        ref: ref,
        className: cn('text-lg font-semibold leading-none tracking-tight', className)
    }, props));
});
DrawerTitle.displayName = vaul.Drawer.Title.displayName;
const DrawerDescription = /*#__PURE__*/ React__namespace.forwardRef((_param, ref)=>{
    var { className } = _param, props = _object_without_properties_loose._(_param, [
        "className"
    ]);
    return /*#__PURE__*/ jsxRuntime.jsx(vaul.Drawer.Description, _extends._({
        ref: ref,
        className: cn('text-muted-foreground text-sm', className)
    }, props));
});
DrawerDescription.displayName = vaul.Drawer.Description.displayName;

exports.Drawer = Drawer;
exports.DrawerClose = DrawerClose;
exports.DrawerContent = DrawerContent;
exports.DrawerDescription = DrawerDescription;
exports.DrawerHeader = DrawerHeader;
exports.DrawerTitle = DrawerTitle;
exports.DrawerTrigger = DrawerTrigger;
exports.cn = cn;
