'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { useState } from 'react';
import { c as cn, C as ChatCanvasActions, B as Button } from './actions-12s-M34siTXk.js';
import { T as Tabs, a as TabsList, b as TabsTrigger, c as TabsContent } from './tabs-12s-Cq0FWlgK.js';
import { fileExtensionToEditorLang, CodeEditor } from '../widgets/index.js';
import { u as useChatCanvas } from './context-12s-DUrdLaCB.js';

function CodeArtifactViewer({ className, tabs }) {
    const { displayedArtifact, updateArtifact } = useChatCanvas();
    const [updatedCode, setUpdatedCode] = useState();
    if ((displayedArtifact == null ? void 0 : displayedArtifact.type) !== 'code') return null;
    const codeArtifact = displayedArtifact;
    const handleCodeChange = (newValue)=>{
        setUpdatedCode(newValue);
    };
    const handleSaveChanges = ()=>{
        if (!updatedCode) return;
        setUpdatedCode(undefined);
        updateArtifact(codeArtifact, updatedCode);
    };
    var _codeArtifact_data_file_name_split_pop;
    const codeEditorLanguage = fileExtensionToEditorLang((_codeArtifact_data_file_name_split_pop = codeArtifact.data.file_name.split('.').pop()) != null ? _codeArtifact_data_file_name_split_pop : '');
    return /*#__PURE__*/ jsxs(Tabs, {
        defaultValue: "code",
        className: cn('flex h-full min-h-0 flex-1 flex-col gap-4 p-4', className),
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex items-center justify-between",
                children: [
                    /*#__PURE__*/ jsxs(TabsList, {
                        children: [
                            /*#__PURE__*/ jsx(TabsTrigger, {
                                value: "code",
                                children: "Code"
                            }),
                            tabs && Object.entries(tabs).map(([key])=>/*#__PURE__*/ jsx(TabsTrigger, {
                                    value: key,
                                    className: "capitalize",
                                    children: key
                                }, key))
                        ]
                    }),
                    /*#__PURE__*/ jsx(ChatCanvasActions, {})
                ]
            }),
            /*#__PURE__*/ jsxs("div", {
                className: "min-h-0 flex-1 overflow-auto pr-2",
                children: [
                    /*#__PURE__*/ jsxs(TabsContent, {
                        value: "code",
                        className: "relative h-full",
                        children: [
                            /*#__PURE__*/ jsx(CodeEditor, {
                                code: updatedCode != null ? updatedCode : codeArtifact.data.code,
                                onChange: handleCodeChange,
                                language: codeEditorLanguage
                            }),
                            updatedCode && /*#__PURE__*/ jsxs("div", {
                                className: "bg-background absolute right-0 top-0 flex gap-2 pr-2 text-sm",
                                children: [
                                    /*#__PURE__*/ jsx(Button, {
                                        size: "sm",
                                        className: "h-7 bg-blue-500 hover:bg-blue-600",
                                        onClick: handleSaveChanges,
                                        children: "Save"
                                    }),
                                    /*#__PURE__*/ jsx(Button, {
                                        variant: "outline",
                                        size: "sm",
                                        className: "h-7",
                                        onClick: ()=>setUpdatedCode(undefined),
                                        children: "Revert"
                                    })
                                ]
                            })
                        ]
                    }),
                    tabs && Object.entries(tabs).map(([key, value])=>/*#__PURE__*/ jsx(TabsContent, {
                            value: key,
                            className: "h-full",
                            children: value
                        }, key))
                ]
            })
        ]
    });
}

export { CodeArtifactViewer as C };
