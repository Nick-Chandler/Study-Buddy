'use client';
import { jsxs, jsx } from 'react/jsx-runtime';
import { FileText } from 'lucide-react';
import { c as cn, C as ChatCanvasActions, B as Button } from './actions-12s-M34siTXk.js';
import { DocumentEditor } from '../widgets/index.js';
import { u as useChatCanvas } from './context-12s-DUrdLaCB.js';
import { useState } from 'react';

// Convert citation with node_id to citation number in markdown
function processDocument(content, nodeIds) {
    if (nodeIds.length === 0) return content;
    const citationRegex = /\[citation:([a-fA-F0-9\\-]+)\](?:\(javascript:void\(0\)\))?/g;
    let processedContent = content.replace(citationRegex, (match, citationId)=>{
        const nodeIndex = nodeIds.findIndex((nodeId)=>nodeId === citationId);
        if (nodeIndex !== -1) return ` \`${nodeIndex + 1}\` `;
        return match // return original citation if not found
        ;
    });
    // MdxEditor does not support <br> tags
    processedContent = processedContent.replace(/<br\s*\/?>/gi, ' ');
    return processedContent;
}
function DocumentArtifactViewer({ className, children }) {
    var _documentArtifact_data_sources;
    const { displayedArtifact, updateArtifact } = useChatCanvas();
    const [updatedContent, setUpdatedContent] = useState();
    if ((displayedArtifact == null ? void 0 : displayedArtifact.type) !== 'document') return null;
    const documentArtifact = displayedArtifact;
    const { data: { content, title, type } } = documentArtifact;
    var _documentArtifact_data_sources_map;
    const transformedContent = processDocument(content, (_documentArtifact_data_sources_map = (_documentArtifact_data_sources = documentArtifact.data.sources) == null ? void 0 : _documentArtifact_data_sources.map((source)=>source.id)) != null ? _documentArtifact_data_sources_map : []);
    const handleDocumentChange = (markdown)=>{
        setUpdatedContent(markdown);
    };
    const handleSaveChanges = ()=>{
        if (!updatedContent) return;
        updateArtifact(documentArtifact, updatedContent);
        setUpdatedContent(undefined);
    };
    return /*#__PURE__*/ jsxs("div", {
        className: cn('flex min-h-0 flex-1 flex-col', className),
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex items-center justify-between border-b p-4",
                children: [
                    /*#__PURE__*/ jsxs("h3", {
                        className: "flex items-center gap-3 text-gray-600",
                        children: [
                            /*#__PURE__*/ jsx(FileText, {
                                className: "size-8 text-blue-500"
                            }),
                            /*#__PURE__*/ jsxs("div", {
                                className: "flex flex-col",
                                children: [
                                    /*#__PURE__*/ jsx("div", {
                                        className: "text font-semibold",
                                        children: title
                                    }),
                                    /*#__PURE__*/ jsx("div", {
                                        className: "text-xs text-gray-500",
                                        children: type
                                    })
                                ]
                            })
                        ]
                    }),
                    /*#__PURE__*/ jsx(ChatCanvasActions, {})
                ]
            }),
            /*#__PURE__*/ jsxs("div", {
                className: "relative mx-20 flex min-h-0 flex-1 flex-col items-stretch gap-4 py-2",
                children: [
                    updatedContent && /*#__PURE__*/ jsxs("div", {
                        className: "absolute right-[30px] top-[14px] z-20 flex gap-2 text-sm",
                        children: [
                            /*#__PURE__*/ jsx(Button, {
                                size: "sm",
                                className: "h-7 bg-blue-500 hover:bg-blue-600",
                                onClick: handleSaveChanges,
                                children: "Save"
                            }),
                            /*#__PURE__*/ jsx(Button, {
                                variant: "outline",
                                size: "sm",
                                className: "h-7",
                                onClick: ()=>setUpdatedContent(undefined),
                                children: "Revert"
                            })
                        ]
                    }),
                    children != null ? children : /*#__PURE__*/ jsx(DocumentEditor, {
                        content: transformedContent,
                        onChange: handleDocumentChange,
                        className: "overflow-y-auto"
                    }, documentArtifact.created_at)
                ]
            })
        ]
    });
}

export { DocumentArtifactViewer as D };
