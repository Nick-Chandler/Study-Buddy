'use client';
import { jsxs, jsx, Fragment } from 'react/jsx-runtime';
import { i as isEqualArtifact, c as cn, B as Button, C as ChatCanvasActions } from './actions-12s-M34siTXk.js';
import { C as CodeArtifactViewer } from './code-12s-DhqcshEG.js';
import { u as useChatCanvas } from './context-12s-DUrdLaCB.js';
import { D as DocumentArtifactViewer } from './document-12s-BPNIgodO.js';
import { FileText, FileCode } from 'lucide-react';
import { B as Badge } from './badge-12s-jRdj-BxT.js';

const IconMap = {
    code: FileCode,
    document: FileText
};
function ArtifactCard({ data }) {
    const { openArtifactInCanvas, getArtifactVersion, restoreArtifact, displayedArtifact } = useChatCanvas();
    const { versionNumber, isLatest } = getArtifactVersion(data);
    const Icon = IconMap[data.type];
    const title = getCardTitle(data);
    const isDisplayed = displayedArtifact && isEqualArtifact(data, displayedArtifact);
    return /*#__PURE__*/ jsxs("div", {
        className: cn('border-border flex w-full max-w-72 cursor-pointer items-center justify-between gap-2 rounded-lg border-2 p-2 hover:border-blue-500', isDisplayed && 'border-blue-500'),
        onClick: ()=>openArtifactInCanvas(data),
        children: [
            /*#__PURE__*/ jsxs("div", {
                className: "flex flex-1 items-center gap-2",
                children: [
                    /*#__PURE__*/ jsx(Icon, {
                        className: "size-7 shrink-0 text-blue-500"
                    }),
                    /*#__PURE__*/ jsxs("div", {
                        className: "flex flex-col",
                        children: [
                            /*#__PURE__*/ jsxs("div", {
                                className: "text-sm font-semibold",
                                children: [
                                    "Version ",
                                    versionNumber
                                ]
                            }),
                            title && /*#__PURE__*/ jsx("div", {
                                className: "text-xs text-gray-600",
                                children: title
                            })
                        ]
                    })
                ]
            }),
            isLatest ? /*#__PURE__*/ jsx(Badge, {
                className: "ml-2 bg-blue-500 hover:bg-blue-600",
                children: "Latest"
            }) : /*#__PURE__*/ jsx(Button, {
                variant: "ghost",
                size: "sm",
                className: "h-8 shrink-0 cursor-pointer text-xs",
                onClick: (e)=>{
                    e.stopPropagation();
                    restoreArtifact(data);
                },
                children: "Restore"
            })
        ]
    });
}
const getCardTitle = (artifact)=>{
    if (artifact.type === 'code') {
        const { file_name } = artifact.data;
        return file_name;
    }
    if (artifact.type === 'document') {
        const { title } = artifact.data;
        return title;
    }
    return '';
};

function ChatCanvas({ children, className }) {
    const { isCanvasOpen, displayedArtifact } = useChatCanvas();
    if (!isCanvasOpen || !displayedArtifact) return null;
    return /*#__PURE__*/ jsx("div", {
        className: cn('right-0 top-0 flex h-full w-3/5 shrink-0 flex-col border-l bg-white', className),
        style: {
            animation: isCanvasOpen ? 'slideIn 0.3s ease-out forwards' : 'slideOut 0.3s ease-out forwards'
        },
        children: children != null ? children : /*#__PURE__*/ jsxs(Fragment, {
            children: [
                /*#__PURE__*/ jsx(CodeArtifactViewer, {}),
                /*#__PURE__*/ jsx(DocumentArtifactViewer, {})
            ]
        })
    });
}
ChatCanvas.CodeArtifact = CodeArtifactViewer;
ChatCanvas.DocumentArtifact = DocumentArtifactViewer;
ChatCanvas.Artifact = ArtifactCard;
ChatCanvas.Actions = ChatCanvasActions;

export { ChatCanvas as C };
